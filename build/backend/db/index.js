"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.LibBAnnotation = exports.LibSeqName = exports.LibGenreList = exports.LibGenre = exports.LibBook = exports.LibAuthorName = exports.LibAuthor = void 0;
const libavtor_1 = require("./libavtor");
Object.defineProperty(exports, "LibAuthor", { enumerable: true, get: function () { return libavtor_1.LibAuthor; } });
const libavtorname_1 = require("./libavtorname");
Object.defineProperty(exports, "LibAuthorName", { enumerable: true, get: function () { return libavtorname_1.LibAuthorName; } });
const libbook_1 = require("./libbook");
Object.defineProperty(exports, "LibBook", { enumerable: true, get: function () { return libbook_1.LibBook; } });
const libgenre_1 = require("./libgenre");
Object.defineProperty(exports, "LibGenre", { enumerable: true, get: function () { return libgenre_1.LibGenre; } });
const libgenrelist_1 = require("./libgenrelist");
Object.defineProperty(exports, "LibGenreList", { enumerable: true, get: function () { return libgenrelist_1.LibGenreList; } });
const libseqname_1 = require("./libseqname");
Object.defineProperty(exports, "LibSeqName", { enumerable: true, get: function () { return libseqname_1.LibSeqName; } });
const libbannotations_1 = require("./libbannotations");
Object.defineProperty(exports, "LibBAnnotation", { enumerable: true, get: function () { return libbannotations_1.LibBAnnotation; } });
libgenrelist_1.LibGenreList.hasMany(libgenre_1.LibGenre, { foreignKey: 'GenreId' });
libgenre_1.LibGenre.belongsTo(libgenrelist_1.LibGenreList, { foreignKey: 'GenreId' });
libgenre_1.LibGenre.hasMany(libbook_1.LibBook, { foreignKey: 'BookId' });
libbook_1.LibBook.belongsTo(libgenre_1.LibGenre, { foreignKey: 'BookId' });
libbook_1.LibBook.belongsTo(libbannotations_1.LibBAnnotation, { foreignKey: 'BookId', targetKey: 'BookId' });
libbannotations_1.LibBAnnotation.belongsTo(libbook_1.LibBook, { foreignKey: 'BookId', targetKey: 'BookId' });
libbook_1.LibBook.belongsToMany(libgenrelist_1.LibGenreList, { through: 'LibGenre', foreignKey: "BookId", otherKey: "GenreId" });
libbook_1.LibBook.belongsToMany(libavtorname_1.LibAuthorName, { through: 'LibAvtor', foreignKey: "BookId", otherKey: "AvtorId" });
